diff --git a/python/qrcodegen-batch-test.py b/python/qrcodegen-batch-test.py
index f0d3663..fe0ac52 100644
--- a/python/qrcodegen-batch-test.py
+++ b/python/qrcodegen-batch-test.py
@@ -24,19 +24,15 @@
 #   Software.
 # 
 
-import itertools, random, subprocess, sys, time
+import itertools, random, subprocess, sys, time, os, os.path
 if sys.version_info.major < 3:
 	raise RuntimeError("Requires Python 3+")
 
 
 CHILD_PROGRAMS = [
-	["python2", "-B", "../python/qrcodegen-worker.py"],  # Python 2 program
 	["python3", "-B", "../python/qrcodegen-worker.py"],  # Python 3 program
-	["java", "-cp", "../java/src/main/java", "-ea:io.nayuki.qrcodegen...", "io/nayuki/qrcodegen/QrCodeGeneratorWorker"],  # Java program
-	["node", "../typescript/qrcodegen-worker.js"],  # TypeScript program
 	["../c/qrcodegen-worker"],  # C program
 	["../cpp/QrCodeGeneratorWorker"],  # C++ program
-	["../rust/target/debug/examples/qrcodegen-worker"],  # Rust program
 ]
 
 
@@ -47,8 +43,14 @@ def main():
 	global subprocs
 	try:
 		for args in CHILD_PROGRAMS:
+			env = dict(os.environ)
+			if args[0].startswith('..'):
+				ld_path = os.path.dirname(args[0])
+				if 'LD_LIBRARY_PATH' in env:
+					ld_path += ':' + env['LD_LIBRARY_PATH']
+				env['LD_LIBRARY_PATH'] = ld_path
 			subprocs.append(subprocess.Popen(args, universal_newlines=True,
-				stdin=subprocess.PIPE, stdout=subprocess.PIPE))
+				stdin=subprocess.PIPE, stdout=subprocess.PIPE, env=env))
 	except FileNotFoundError:
 		write_all(-1)
 		raise
@@ -63,11 +65,13 @@ def main():
 		sys.exit("Error: One or more workers failed to start")
 	
 	# Do tests
-	for i in itertools.count():
+	for i in range(50):
 		print("Trial {}: ".format(i), end="")
 		do_trial()
 		print()
 
+	for proc in subprocs:
+		proc.terminate()
 
 def do_trial():
 	mode = random.randrange(4)
